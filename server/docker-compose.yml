services:
  chat-server:
    container_name: chat-server
    build: .
    ports:
      - "0.0.0.0:3001:3001"  # Explicitly bind to all interfaces
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://chatuser:chatpass@postgres:5432/chatdb
      - CORS_ORIGIN=*  # Allow all origins for LAN access
      - PORT=3001
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chat-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: chatdb
      POSTGRES_USER: chatuser
      POSTGRES_PASSWORD: chatpass
    # No ports exposed - only accessible within Docker network
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatuser -d chatdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  chat-network:
    driver: bridge